name: CI/CD

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  workflow_dispatch:

# Environment variables for Nx Cloud
env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
  NX_CLOUD_AUTH_TOKEN: ${{ secrets.NX_CLOUD_AUTH_TOKEN }}

jobs:
  main:
    name: Main Workflow
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for Nx affected commands
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        uses: bahmutov/npm-install@v3
      
      - name: Enable Nx Cloud read-only mode
        if: github.event_name != 'pull_request'
        run: npx nx-cloud start-ci-run --distribute-on='5 linux-medium-js' --stop-agents-after='build'
      
      - name: Run linting
        run: npx nx affected --target=lint --parallel=3 --configuration=ci
      
      - name: Run tests
        run: npx nx affected --target=test --parallel=3 --configuration=ci
      
      - name: Run build
        run: npx nx affected --target=build --parallel=3 --configuration=production
      
      - name: Upload test coverage
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage
          fail_ci_if_error: false
  
  # Documentation build (runs in parallel with main workflow)
  docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    needs: main
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build documentation
        run: npx nx build bsaas-docs --configuration=production
      
      # Add deployment steps here (e.g., Vercel, Netlify, GitHub Pages)
      # - name: Deploy documentation
      #   run: |
      #     # Add deployment commands here
      #     echo "Documentation deployment would happen here"
